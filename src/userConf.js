/**
 * @description 关于教师和学生显示不同东西 一种可能的解决方案
 * 首先我们定义三种用户{ 游客，学生，教师 } 
 * 然后对每一个可点击元素分别定义他们的权限，权限分为 3种 [read, write, execute]
 * 根据可读与否展示元素（按钮，表格等）只有点击时才判断是否可写，也就意味着修改表
 * @time 18-08-05
 */
const list = {
    'student' : {
        'CourseListPage' : {
            '课程' : [1, 0, 0],     // 我学习（教授）的课程
            '课程组' : [0, 0, 0],   // 我教授的课程组
        }, 
        'LessonPage' : {
            '课程详细信息' : [1, 0, 0],
            '所在课程组' : [0, 0, 0],
            '教师' : [0, 0, 0],
            '学生' : [0, 0, 0],
        //  '任务组' : [1, 0, 0], {  // 这里的任务组 替换成 4个 具体的任务组
            '作业' : [1, 0, 0],
            '实验' : [1, 0, 0],
            '考试' : [1, 0, 0],
            '其他' : [1, 0, 0],
        //  }
        },
        'MissionGroupPage' : {
            '详细信息' : [1, 0, 0],   // 
            '任务' : [1, 0, 0],            // 或者说 contest
        },
        'MissionPage' : {
            '详细信息' : [1, 0, 0],     // 待定
            '题目概览' : [1, 0, 0],
            '题目' : [1, 0, 1],            // 这里的 使用题目 意味着 提交作业 什么的
            '提交' : [1, 0, 0],
            '成绩' : [1, 0, 0],
        // 自己根据virtual Judge 添加的 {
            '其他' : [0, 0, 0]          // 这项还未做，可以做个类似comments的东西，然后将其设为可读
        // }
        },
    },
    'teacher' : {
        'CourseListPage' : {
            '课程' : [1, 0, 0],     // 我学习（教授）的课程
            '课程组' : [1, 0, 0],   // 我教授的课程组
        }, 
        'LessonPage' : {
            '课程详细信息' : [1, 0, 0],
            '所在课程组' : [1, 0, 0],
            '教师' : [1, 0, 0],
            '学生' : [1, 0, 0],
        //  '任务组' : [1, 0, 0], {  // 这里的任务组 替换成 4个 具体的任务组
            '作业' : [1, 1, 0],      // 作业可写，也就意味着添加新的作业 或者 删除某个作业
            '实验' : [1, 1, 0],
            '考试' : [1, 1, 0],
            '其他' : [1, 1, 0],
        //  }
        },
        'MissionGroupPage' : {  // 任务组 是 作业 实验 考试 其他 中的某一个
            '详细信息' : [1, 1, 0],   // 可写 只有 编辑, 添加和删除由父项提供
            '任务' : [1, 1, 0],            // 或者说 contest （可写）
        },
        'MissionPage' : {
            '详细信息' : [1, 1, 0],     // 待定 只有编辑
            '题目概览' : [1, 1, 0],
            '题目' : [1, 1, 0],            // TODO: 题目可编辑 （这是一个待添加的功能）
            '提交' : [1, 0, 0],
            '成绩' : [1, 0, 0],
        // 自己根据virtual Judge 添加的 {
            '其他' : [0, 0, 0]          // 这项还未做，可以做个类似comments的东西，然后将其设为可读 
        // }
        },

    },
    'kami' : {      // 没有权限 需要登录 （PS：此kami 意为 纸 详见mugen等级 :) ）
        'CourseListPage' : {
            '课程' : [0, 0, 0],     // 我学习（教授）的课程
            '课程组' : [0, 0, 0],   // 我教授的课程组
        }, 
        'LessonPage' : {
            '课程详细信息' : [0, 0, 0],
            '所在课程组' : [0, 0, 0],
            '教师' : [0, 0, 0],
            '学生' : [0, 0, 0],
        //  '任务组' : [1, 0, 0], {  // 这里的任务组 替换成 4个 具体的任务组
            '作业' : [0, 0, 0],
            '实验' : [0, 0, 0],
            '考试' : [0, 0, 0],
            '其他' : [0, 0, 0],
        //  }
        },
        'MissionGroupPage' : {
            '任务组详细信息' : [0, 0, 0],   // 
            '任务' : [0, 0, 0],            // 或者说 contest
        },
        'MissionPage' : {
            '任务详细信息' : [0, 0, 0],     // 待定
            '题目概览' : [1, 0, 0],
            '题目' : [0, 0, 0],            // 这里的 使用题目 意味着 提交作业 什么的
            '提交' : [0, 0, 0],
            '成绩' : [0, 0, 0],
        // 自己根据virtual Judge 添加的 {
            '其他' : [0, 0, 0]            // 这项还未做，可以做个类似comments的东西
        // }
        },
    },
};



var curUser = 'teacher';

let setCurUser = (userType)=> {
    curUser = userType;
}

let getCurUser = ()=> {
    return curUser;
}


export default {list, setCurUser, getCurUser, curUser};